{"version":3,"sources":["components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","cancelToken","useState","postText","setPostText","postGif","setGif","gifs","setGifs","gifstring","setGifstring","handleGifSearch","e","a","target","value","cancel","axios","CancelToken","source","get","process","token","gifData","data","type","className","id","tabIndex","onSubmit","post","text","gif","jsonPost","JSON","stringify","localStorage","setItem","placeholder","onChange","htmlFor","src","images","original","url","alt","title","href","role","map","onClick","App","posts","setPosts","useEffect","jsonPosts","getItem","allPosts","parse","getPosts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07921e32.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// import Modal from \"./Modal\";\r\n\r\nconst Navbar = () => {\r\n  let cancelToken;\r\n\r\n  const url = \"https://api.giphy.com/v1/gifs/search\";\r\n  const [postText, setPostText] = useState(\"\");\r\n  const [postGif, setGif] = useState({});\r\n  const [gifs, setGifs] = useState([]);\r\n  const [gifstring, setGifstring] = useState(\"\");\r\n\r\n  const handleGifSearch = async (e) => {\r\n    setGifstring(e.target.value);\r\n\r\n    if (typeof cancelToken != typeof undefined) {\r\n      cancelToken.cancel(\"cancelling previous request\");\r\n    }\r\n    cancelToken = axios.CancelToken.source();\r\n\r\n    var gifData = await axios.get(\r\n      `${url}?api_key=${process.env.REACT_APP_GIPHY_KEY}&q=${gifstring}&limit=5`,\r\n      { cancelToken: cancelToken.token }\r\n    );\r\n\r\n    setGifs(gifData.data.data);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    const post = {\r\n      text: postText,\r\n      gif: postGif,\r\n    };\r\n\r\n    var jsonPost = JSON.stringify(post);\r\n\r\n    localStorage.setItem(\"post\", jsonPost);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary\"\r\n        data-bs-toggle=\"modal\"\r\n        data-bs-target=\"#exampleModal\"\r\n      >\r\n        Add Post\r\n      </button>\r\n\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"exampleModal\"\r\n        tabIndex=\"-1\"\r\n        aria-labelledby=\"exampleModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                Add Post\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"modal-body\">\r\n                <div className=\"form-floating\">\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    placeholder=\"Leave a comment here\"\r\n                    id=\"floatingTextarea2\"\r\n                    onChange={(e) => setPostText(e.target.value)}\r\n                  />\r\n                  <label htmlFor=\"floatingTextarea2\">\r\n                    What's on your mind?\r\n                  </label>\r\n                  {postGif && (\r\n                    <img\r\n                      src={postGif.images?.original?.url}\r\n                      alt={postGif.title}\r\n                      className=\"mt-3\"\r\n                    />\r\n                  )}\r\n                </div>\r\n                {/* <Modal /> */}\r\n                <p className=\"mt-3\">\r\n                  <a\r\n                    className=\"btn btn-outline-primary\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    href=\"#collapseExample\"\r\n                    role=\"button\"\r\n                    aria-expanded=\"false\"\r\n                    aria-controls=\"collapseExample\"\r\n                  >\r\n                    GIF\r\n                  </a>\r\n                </p>\r\n                <div className=\"collapse\" id=\"collapseExample\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={gifstring}\r\n                    onChange={(e) => handleGifSearch(e)}\r\n                  />\r\n                  {gifs &&\r\n                    gifs.map((gif) => (\r\n                      <div\r\n                        className=\"card card-body\"\r\n                        key={gif.id}\r\n                        onClick={() => {\r\n                          setGif(gif);\r\n                          setGifstring(\"\");\r\n                          setGifs(\"\");\r\n                        }}\r\n                      >\r\n                        <img src={gif.images?.original?.url} alt={gif.title} />\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-bs-dismiss=\"modal\"\r\n                >\r\n                  Close\r\n                </button>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Post\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from \"react\";\n\nimport Navbar from \"./components/Navbar\";\n\nconst App = () => {\n  const [posts, setPosts] = useState({});\n\n  const getPosts = () => {\n    var jsonPosts = localStorage.getItem(\"post\");\n\n    var allPosts = JSON.parse(jsonPosts);\n    setPosts(() => allPosts);\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return (\n    <div className=\"container container-fluid\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"container-fluid d-flex justify-content-center\">\n          <h1 className=\"mx-3\">FB Type Post</h1>\n\n          <Navbar />\n        </div>\n      </nav>\n\n      {posts && (\n        <div className=\"container d-flex justify-content-center mt-4\">\n          <div className=\"card \">\n            <div className=\"card-title\">\n              <p className=\"mt-3 text-center fs-4\">{posts.text}</p>\n            </div>\n            <div className=\"card-body\">\n              <img\n                src={posts.gif?.images?.original?.url}\n                alt={posts.gif?.title}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}